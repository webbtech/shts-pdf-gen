AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  shts-pdf-gen
  
  SAM Template for shts-pdf-gen

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Parameters:
  ParamBillTo:
    Description: Required. Value of Tag key BillTo
    Type: String
    Default: 'ShorthillsTreeService'
  ParamKMSKeyID:
    Description: KMS key id
    Type: String
  ParamSSMPath:
    Description: SSM Params path
    Type: String
  ParamStorageBucket:
    Description: s3 Storage bucket for all files
    Type: String

Resources:

  RestApi:
    Type: AWS::Serverless::Api
    DeletionPolicy: Delete
    DependsOn: PDFGeneratorFunction
    Properties:
      StageName: Prod
      EndpointConfiguration: 
        Type: REGIONAL
      Cors: "'*'"
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName: GatewayAuthorization
      Tags:
        BillTo: !Ref ParamBillTo
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: "401"
          ResponseTemplates: 
              "application/json": '{ "message": $context.error.messageString }'
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'WWW-Authenticate'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
  
      # TODO: require Domain
      # Domain:
      #   DomainName: 
      #   CertificateArn: !Ref ApiCertificate
      #   Route53:
      #     HostedZoneId: ""
      #     DistributionDomainName:
      #       Value: !Sub: ""

  PDFGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: pdf
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Role: !GetAtt PDFGeneratorRole.Arn
      Timeout: 20 #keep at 20 for productions
      MemorySize: 128
      Environment:
        Variables:
          Stage: prod
      
      Events:
        Ping:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref RestApi
            Auth:
              ApiKeyRequired: false
        Pdf:
          Type: Api
          Properties:
            Path: /pdf
            Method: POST
            RestApiId: !Ref RestApi
            Auth:
              ApiKeyRequired: true

      Environment:
        Variables:
          Stage: production
      Tags:
        BillTo: !Ref ParamBillTo

  PDFGeneratorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: FunctionSSMAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParametersByPath
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParamSSMPath}
      - PolicyName: FunctionLogAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
      - PolicyName: FunctionXRayAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            Resource: '*'
      - PolicyName: FunctionKMSAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            Resource:
              Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${ParamKMSKeyID}
      - PolicyName: FunctionS3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            Resource: 
              Fn::Sub: arn:aws:s3:::${ParamStorageBucket}/*


Outputs:
  ApiId:
    Description: API ID
    Value:
      Ref: RestApi   
  ApiURL:
    Description: API URL
    Value: ""
  ApiEndpoint:
    Description: "API Prod stage endpoint"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  PDFGeneratorAPI:
    Description: API Gateway endpoint URL for Prod environment for PDFGeneratorFunction
    Value: !Sub ""     
  PDFGeneratorFunction:
    Description: "PDFGenerator Lambda function ARN"
    Value: !GetAtt PDFGeneratorFunction.Arn
  ApiKey:
    Description: "You can find your API Key in the AWS console: (Put in the request HEADER as 'x-api-key')"
    Value: !Sub "https://console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/api-keys/${RestApi}"
